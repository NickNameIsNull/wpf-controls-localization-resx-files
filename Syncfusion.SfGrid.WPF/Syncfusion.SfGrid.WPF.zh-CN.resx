<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewRowText" xml:space="preserve">
    <value>单击此处添加新行</value>
  </data>
  <data name="AdvancedFiltersButtonText" xml:space="preserve">
    <value>高级过滤器</value>
  </data>
  <data name="After" xml:space="preserve">
    <value>在指定日期之后</value>
  </data>
  <data name="AfterOrEqual" xml:space="preserve">
    <value>在指定日期之后或与之相同</value>
  </data>
  <data name="AND" xml:space="preserve">
    <value>和</value>
  </data>
  <data name="Before" xml:space="preserve">
    <value>在指定日期之前</value>
  </data>
  <data name="BeforeOrEqual" xml:space="preserve">
    <value>在指定日期之前或与之相同</value>
  </data>
  <data name="BeginsWith" xml:space="preserve">
    <value>开头是</value>
  </data>
  <data name="Blanks" xml:space="preserve">
    <value>（毛坯）</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>底部：</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>清除筛选器</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="ColumnChooserTitle" xml:space="preserve">
    <value>列选择器</value>
  </data>
  <data name="ColumnChooserWaterMark" xml:space="preserve">
    <value>（无可用字段）</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="CustomMargin" xml:space="preserve">
    <value>自定义边距</value>
  </data>
  <data name="CustomMargins" xml:space="preserve">
    <value>自定义边距</value>
  </data>
  <data name="CustomPageSizes" xml:space="preserve">
    <value>自定义页面大小</value>
  </data>
  <data name="CustomSize" xml:space="preserve">
    <value>自定义尺寸</value>
  </data>
  <data name="DateFilters" xml:space="preserve">
    <value>日期筛选器</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>空</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>结尾是</value>
  </data>
  <data name="EnterValidFilterValue" xml:space="preserve">
    <value>输入有效的筛选器值</value>
  </data>
  <data name="Equalss" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="FitAllColumnsOnOnePage" xml:space="preserve">
    <value>将所有列放在一个页面上</value>
  </data>
  <data name="FitAllRowsOnOnePage" xml:space="preserve">
    <value>使所有行适合一页</value>
  </data>
  <data name="FitGridOnOnePage" xml:space="preserve">
    <value>使网格适合一页</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>大于</value>
  </data>
  <data name="GreaterThanorEqual" xml:space="preserve">
    <value>大于或等于</value>
  </data>
  <data name="GroupDropAreaText" xml:space="preserve">
    <value>将列标题拖动到此处以按该列分组</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>高度：</value>
  </data>
  <data name="LandScapeOrientation" xml:space="preserve">
    <value>横向</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>左：</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>小于</value>
  </data>
  <data name="LessThanorEqual" xml:space="preserve">
    <value>小于或等于</value>
  </data>
  <data name="MatchCaseToolTip" xml:space="preserve">
    <value>区分大小写 </value>
  </data>
  <data name="Moderate" xml:space="preserve">
    <value>中等</value>
  </data>
  <data name="Narrow" xml:space="preserve">
    <value>窄</value>
  </data>
  <data name="NoItems" xml:space="preserve">
    <value>暂无项目</value>
  </data>
  <data name="NoMatches" xml:space="preserve">
    <value>无匹配项</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>正常</value>
  </data>
  <data name="NoScaling" xml:space="preserve">
    <value>无缩放</value>
  </data>
  <data name="NotContains" xml:space="preserve">
    <value>不包含</value>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>不为空</value>
  </data>
  <data name="NotEquals" xml:space="preserve">
    <value>不等于</value>
  </data>
  <data name="NotNull" xml:space="preserve">
    <value>不为Null</value>
  </data>
  <data name="Null" xml:space="preserve">
    <value>Null</value>
  </data>
  <data name="NumberFilters" xml:space="preserve">
    <value>数字筛选器</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="OR" xml:space="preserve">
    <value>或</value>
  </data>
  <data name="PortraitOrientation" xml:space="preserve">
    <value>纵向</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>打印</value>
  </data>
  <data name="PrintPreview" xml:space="preserve">
    <value>打印预览</value>
  </data>
  <data name="QuickPrint" xml:space="preserve">
    <value>快速打印</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>右：</value>
  </data>
  <data name="RowErrorMessage" xml:space="preserve">
    <value>包含错误的行</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>（全选）</value>
  </data>
  <data name="SelectDateToolTip" xml:space="preserve">
    <value>选择日期</value>
  </data>
  <data name="ShowRowsWhere" xml:space="preserve">
    <value>显示行，其中：</value>
  </data>
  <data name="SortDateAscending" xml:space="preserve">
    <value>从最旧到最新排序</value>
  </data>
  <data name="SortDateDescending" xml:space="preserve">
    <value>从最新到最旧排序</value>
  </data>
  <data name="SortNumberAscending" xml:space="preserve">
    <value>从小到大排序</value>
  </data>
  <data name="SortNumberDescending" xml:space="preserve">
    <value>从大到小排序</value>
  </data>
  <data name="SortStringAscending" xml:space="preserve">
    <value>将 A 排序到 Z</value>
  </data>
  <data name="SortStringDescending" xml:space="preserve">
    <value>将 Z 排序为 A</value>
  </data>
  <data name="TextFilters" xml:space="preserve">
    <value>文本过滤器</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>返回页首：</value>
  </data>
  <data name="Wide" xml:space="preserve">
    <value>宽</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>宽度：</value>
  </data>
  <data name="CantDropHere" xml:space="preserve">
    <value>不能放在这里</value>
  </data>
  <data name="DraggingRowsCount" xml:space="preserve">
    <value>拖动行数 :  </value>
  </data>
  <data name="DropAbove" xml:space="preserve">
    <value>落到上方</value>
  </data>
  <data name="DropAsChild" xml:space="preserve">
    <value>放到子项</value>
  </data>
  <data name="DropBelow" xml:space="preserve">
    <value>放到下面</value>
  </data>
  <data name="DropStatus" xml:space="preserve">
    <value>放到状态 ： </value>
  </data>
  <data name="DropHere" xml:space="preserve">
    <value>放在这里</value>
  </data>
  <data name="NotBeginsWith" xml:space="preserve">
    <value>开头不是</value>
  </data>
  <data name="NotEndsWith" xml:space="preserve">
    <value>结尾不是</value>
  </data>
  <data name="CurrentPage" xml:space="preserve">
    <value>当前页面</value>
  </data>
  <data name="PrintPageNumberValidationMessage" xml:space="preserve">
    <value>输入必须是数字</value>
  </data>
  <data name="PrintPageMaxValidationMessage" xml:space="preserve">
    <value>输入必须大于或等于1</value>
  </data>
  <data name="PrintPageMinValidationMessage" xml:space="preserve">
    <value>输入必须小于或等于</value>
  </data>
  <data name="PositivePageNumberValidationMessage" xml:space="preserve">
    <value>输入必须为正值</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>项目</value>
    <comment>要显示的项目</comment>
  </data>
</root>