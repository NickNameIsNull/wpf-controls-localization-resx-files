<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowDrag" xml:space="preserve">
    <value>允许拖动</value>
  </data>
  <data name="AllowFilter" xml:space="preserve">
    <value>允许筛选器</value>
  </data>
  <data name="AllowGroup" xml:space="preserve">
    <value>允许组</value>
  </data>
  <data name="AllowResize" xml:space="preserve">
    <value>允许调整大小</value>
  </data>
  <data name="AllowSort" xml:space="preserve">
    <value>允许排序</value>
  </data>
  <data name="AND" xml:space="preserve">
    <value>和</value>
  </data>
  <data name="ApplyWidthSettings" xml:space="preserve">
    <value>应用宽度设置</value>
  </data>
  <data name="AutoFit" xml:space="preserve">
    <value>自动适应</value>
  </data>
  <data name="CanntPerformSortMessage" xml:space="preserve">
    <value>基础数据源无法执行排序</value>
  </data>
  <data name="ClipboardCopyPaste" xml:space="preserve">
    <value>剪贴板复制粘贴</value>
  </data>
  <data name="ColumnFormat" xml:space="preserve">
    <value>列格式</value>
  </data>
  <data name="ConfirmDeleteMessage" xml:space="preserve">
    <value>确认删除</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>包含...</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>是否要删除所选记录？</value>
  </data>
  <data name="DragDropText" xml:space="preserve">
    <value>在此处拖放列</value>
  </data>
  <data name="DynamicOptions" xml:space="preserve">
    <value>动态选项：</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>结尾是</value>
  </data>
  <data name="EnterFilterValue" xml:space="preserve">
    <value>输入筛选器值。。</value>
  </data>
  <data name="SlideToFilter" xml:space="preserve">
    <value>滑动至过滤器..</value>
  </data>
  <data name="SelectFilterDate" xml:space="preserve">
    <value>选择筛选日期。。</value>
  </data>
  <data name="FilterDateTo" xml:space="preserve">
    <value>筛选日期至..</value>
  </data>
  <data name="EqualsString" xml:space="preserve">
    <value>等于...</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>大于。。。</value>
  </data>
  <data name="GreaterThanOrEqual" xml:space="preserve">
    <value>更伟大或更平等</value>
  </data>
  <data name="HCenter" xml:space="preserve">
    <value>居中</value>
  </data>
  <data name="HeaderText" xml:space="preserve">
    <value>标题文本：</value>
  </data>
  <data name="HLeft" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="Horizontal" xml:space="preserve">
    <value>水平的</value>
  </data>
  <data name="HRight" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="HStretch" xml:space="preserve">
    <value>伸展</value>
  </data>
  <data name="InvalidColumn" xml:space="preserve">
    <value>添加的列无效</value>
  </data>
  <data name="InvalidDataTime" xml:space="preserve">
    <value>无效的数据时间</value>
  </data>
  <data name="InvalidDataToFilter" xml:space="preserve">
    <value>无效的数据筛选器</value>
  </data>
  <data name="IsReadOnly" xml:space="preserve">
    <value>是只读的</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>小于</value>
  </data>
  <data name="LessThanOrEqual" xml:space="preserve">
    <value>小于或等于</value>
  </data>
  <data name="MatchCase" xml:space="preserve">
    <value>区分大小写</value>
  </data>
  <data name="NoMoreItemRemoveMessage" xml:space="preserve">
    <value>没有更多要删除的项，或者基础数据源不支持该项</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="NoRecordsfound" xml:space="preserve">
    <value>未找到任何记录</value>
  </data>
  <data name="NotEnoughSpaceMessage" xml:space="preserve">
    <value>空间不足，是否继续？</value>
  </data>
  <data name="NotEquals" xml:space="preserve">
    <value>不等于</value>
  </data>
  <data name="NotSupportDeletingItemMessage" xml:space="preserve">
    <value>基础数据源不支持删除项，请尝试绑定IList源</value>
  </data>
  <data name="OR" xml:space="preserve">
    <value>或</value>
  </data>
  <data name="SelectAllFilter" xml:space="preserve">
    <value>（全选）</value>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Between" xml:space="preserve">
    <value>之间...</value>
  </data>
  <data name="TextAlignment" xml:space="preserve">
    <value>文本对齐方式：</value>
  </data>
  <data name="VBottom" xml:space="preserve">
    <value>底部</value>
  </data>
  <data name="VCenter" xml:space="preserve">
    <value>居中</value>
  </data>
  <data name="Vertical" xml:space="preserve">
    <value>垂直的</value>
  </data>
  <data name="VStretch" xml:space="preserve">
    <value>伸展</value>
  </data>
  <data name="VTop" xml:space="preserve">
    <value>顶部</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>宽度</value>
  </data>
  <data name="WidthOptions" xml:space="preserve">
    <value>宽度选项</value>
  </data>
  <data name="CurrentPageText" xml:space="preserve">
    <value>第{0}页，共{1}页</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>第一</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>最后</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>下一个</value>
  </data>
  <data name="PageSizes" xml:space="preserve">
    <value>页面大小</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>上一个</value>
  </data>
  <data name="PrintOutputColor" xml:space="preserve">
    <value>打印输出颜色</value>
  </data>
  <data name="PrintText" xml:space="preserve">
    <value>打印</value>
  </data>
  <data name="PrintZoom" xml:space="preserve">
    <value>快速移动</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="AutoEllipsisString" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="AutomationPeerName_TotalPageCountKnown" xml:space="preserve">
    <value>第{0}页，共{1}页</value>
  </data>
  <data name="AutomationPeerName_TotalPageCountUnknown" xml:space="preserve">
    <value>第{0}页</value>
  </data>
  <data name="CurrentPagePrefix_TotalPageCountKnown" xml:space="preserve">
    <value>页</value>
  </data>
  <data name="CurrentPagePrefix_TotalPageCountUnknown" xml:space="preserve">
    <value>页</value>
  </data>
  <data name="CurrentPageSuffix_TotalPageCountKnown" xml:space="preserve">
    <value>的{0}</value>
  </data>
  <data name="InvalidButtonPanelContent" xml:space="preserve">
    <value>NumericButtonPanel包含无效子项。</value>
  </data>
  <data name="InvalidTimeSpan" xml:space="preserve">
    <value>{0}的时间跨度必须是严格的正数。</value>
  </data>
  <data name="PageIndexMustBeNegativeOne" xml:space="preserve">
    <value>当源属性为null或PageSize属性为0时，PageIndex属性只能设置为-1。</value>
  </data>
  <data name="UnderlyingPropertyIsReadOnly" xml:space="preserve">
    <value>无法设置{0}，因为基础属性为只读。</value>
  </data>
  <data name="ValueMustBeGreaterThanOrEqualTo" xml:space="preserve">
    <value>{0}必须大于或等于{1}。</value>
  </data>
  <data name="SetFrozenColumn" xml:space="preserve">
    <value>设置冻结列</value>
  </data>
  <data name="CommandChangeCells" xml:space="preserve">
    <value>更改单元格{0}</value>
  </data>
  <data name="CommandCurrentCellValue" xml:space="preserve">
    <value>更改CurrentCell值行{0}列{1}</value>
  </data>
  <data name="CommandSelectionState" xml:space="preserve">
    <value>更改选择状态行{0}列{1}</value>
  </data>
  <data name="DescriptionChangeCells" xml:space="preserve">
    <value>描述更改单元格</value>
  </data>
  <data name="CommandAddCoveredRanges" xml:space="preserve">
    <value>添加覆盖范围{0}</value>
  </data>
  <data name="CommandRemoveCoveredRanges" xml:space="preserve">
    <value>删除覆盖范围{0}</value>
  </data>
  <data name="CommandInsertColumns" xml:space="preserve">
    <value>在列{1}处插入{0}列</value>
  </data>
  <data name="CommandInsertRows" xml:space="preserve">
    <value>在第{1}行插入{0}行</value>
  </data>
  <data name="CommandMoveColumns" xml:space="preserve">
    <value>将{1}列从{0}移动到{2}</value>
  </data>
  <data name="CommandMoveRows" xml:space="preserve">
    <value>将{1}行从{0}移动到{2}</value>
  </data>
  <data name="CommandRemoveColumns" xml:space="preserve">
    <value>删除列{0}到{1}</value>
  </data>
  <data name="CommandRemoveRows" xml:space="preserve">
    <value>删除行{0}到{1}</value>
  </data>
  <data name="CommandDefaultColumnSize" xml:space="preserve">
    <value>更改默认列宽{0}</value>
  </data>
  <data name="CommandDefaultRowSize" xml:space="preserve">
    <value>将默认行高更改为{0}</value>
  </data>
  <data name="CommandFrozenColumnsCount" xml:space="preserve">
    <value>{0}冻结列</value>
  </data>
  <data name="CommandFrozenRowsCount" xml:space="preserve">
    <value>{0}冻结行</value>
  </data>
  <data name="CommandFooterColumnsCount" xml:space="preserve">
    <value>{0}页脚列</value>
  </data>
  <data name="CommandFooterRowsCount" xml:space="preserve">
    <value>{0}页脚行</value>
  </data>
  <data name="CommandHeaderColumnsCount" xml:space="preserve">
    <value>{0}头列</value>
  </data>
  <data name="CommandHeaderRowsCount" xml:space="preserve">
    <value>{0}标题行</value>
  </data>
  <data name="CommandColumnWidth" xml:space="preserve">
    <value>列宽{0}到{1}</value>
  </data>
  <data name="CommandRowHeight" xml:space="preserve">
    <value>行高{0}到{1}</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="BeginsWith" xml:space="preserve">
    <value>开头是</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ContainsSmall" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="DoesNotBeginsWith" xml:space="preserve">
    <value>开头不是</value>
  </data>
  <data name="DoesNotContain" xml:space="preserve">
    <value>不包含</value>
  </data>
  <data name="DoesNotEndWith" xml:space="preserve">
    <value>结尾不是</value>
  </data>
  <data name="DoesNotEquals" xml:space="preserve">
    <value>不等于</value>
  </data>
  <data name="EndsWithSmall" xml:space="preserve">
    <value>结尾是</value>
  </data>
  <data name="EqualsSmall" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="IsGreaterThan" xml:space="preserve">
    <value>大于</value>
  </data>
  <data name="IsGreaterThanOrEqualto" xml:space="preserve">
    <value>大于或等于</value>
  </data>
  <data name="IsLessThan" xml:space="preserve">
    <value>小于</value>
  </data>
  <data name="IsLessThanorEqualto" xml:space="preserve">
    <value>小于或等于</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="ShowRowsWhere" xml:space="preserve">
    <value>显示行，其中：</value>
  </data>
  <data name="UseSeriesCharacter" xml:space="preserve">
    <value>使用 * 表示任何字符序列</value>
  </data>
  <data name="UseSingleCharacter" xml:space="preserve">
    <value>使用表示任何单个字符</value>
  </data>
  <data name="AboveAverage" xml:space="preserve">
    <value>高于平均值</value>
  </data>
  <data name="After" xml:space="preserve">
    <value>在指定日期之后...</value>
  </data>
  <data name="Before" xml:space="preserve">
    <value>在指定日期之前...</value>
  </data>
  <data name="BeginsWithCaps" xml:space="preserve">
    <value>开头是...</value>
  </data>
  <data name="BelowAverage" xml:space="preserve">
    <value>低于平均水平</value>
  </data>
  <data name="DateFilters" xml:space="preserve">
    <value>日期过滤器</value>
  </data>
  <data name="DoesNotContainCaps" xml:space="preserve">
    <value>不包含</value>
  </data>
  <data name="DoesNotEqual" xml:space="preserve">
    <value>不等于。。。</value>
  </data>
  <data name="EndsWithCaps" xml:space="preserve">
    <value>结尾是...</value>
  </data>
  <data name="GreaterThanOrEqualTo" xml:space="preserve">
    <value>大于或等于...</value>
  </data>
  <data name="isafter" xml:space="preserve">
    <value>在指定日期之后</value>
  </data>
  <data name="isafterorequalto" xml:space="preserve">
    <value>在指定日期之后或与之相同</value>
  </data>
  <data name="isbefore" xml:space="preserve">
    <value>在指定日期之前</value>
  </data>
  <data name="isbeforeorequalto" xml:space="preserve">
    <value>在指定日期之前或与之相同</value>
  </data>
  <data name="LastMonth" xml:space="preserve">
    <value>上个月</value>
  </data>
  <data name="LastWeek" xml:space="preserve">
    <value>上周</value>
  </data>
  <data name="LastYear" xml:space="preserve">
    <value>去年</value>
  </data>
  <data name="LessThanOrEqualTo" xml:space="preserve">
    <value>小于或等于...</value>
  </data>
  <data name="LessThanWithSpace" xml:space="preserve">
    <value>小于...</value>
  </data>
  <data name="NextMonth" xml:space="preserve">
    <value>下个月</value>
  </data>
  <data name="NextWeek" xml:space="preserve">
    <value>下个星期</value>
  </data>
  <data name="NextYear" xml:space="preserve">
    <value>明年</value>
  </data>
  <data name="NumberFilters" xml:space="preserve">
    <value>数字过滤器</value>
  </data>
  <data name="TextFilters" xml:space="preserve">
    <value>文本过滤器</value>
  </data>
  <data name="ThisMonth" xml:space="preserve">
    <value>本月</value>
  </data>
  <data name="ThisWeek" xml:space="preserve">
    <value>本周</value>
  </data>
  <data name="ThisYear" xml:space="preserve">
    <value>今年</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>今天</value>
  </data>
  <data name="Tomorrow" xml:space="preserve">
    <value>明天</value>
  </data>
  <data name="Top10" xml:space="preserve">
    <value>前10项</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>昨天</value>
  </data>
  <data name="NoItemMatch" xml:space="preserve">
    <value>没有与您的搜索匹配的项目。</value>
  </data>
  <data name="CustomAutoFilter" xml:space="preserve">
    <value>自定义自动筛选</value>
  </data>
  <data name="DateTimeAscending" xml:space="preserve">
    <value>从最旧到最新排序</value>
  </data>
  <data name="DateTimeDescending" xml:space="preserve">
    <value>从最新到最旧排序</value>
  </data>
  <data name="NumberAscending" xml:space="preserve">
    <value>从最小到最大排序</value>
  </data>
  <data name="NumberDescending" xml:space="preserve">
    <value>从大到小排序</value>
  </data>
  <data name="StringAscending" xml:space="preserve">
    <value>将 A 排序到 Z</value>
  </data>
  <data name="StringDescending" xml:space="preserve">
    <value>将Z排序为A</value>
  </data>
  <data name="AdvanceFilteringContainsString" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="AdvanceFilteringEqualsString" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="AdvanceFilteringGreaterThanString" xml:space="preserve">
    <value>大于</value>
  </data>
  <data name="AdvnaceFilteringBetweenString" xml:space="preserve">
    <value>之间</value>
  </data>
  <data name="BlankFilterText" xml:space="preserve">
    <value>（空白）</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>清除筛选器</value>
  </data>
  <data name="ShowColumnOptionsFilter" xml:space="preserve">
    <value>显示列选项</value>
  </data>
  <data name="AllFilter" xml:space="preserve">
    <value>（全部）</value>
  </data>
  <data name="CurrentPageSuffix_TotalPageCountUnknown" xml:space="preserve">
    <value>当前页数_总页数未知</value>
  </data>
</root>